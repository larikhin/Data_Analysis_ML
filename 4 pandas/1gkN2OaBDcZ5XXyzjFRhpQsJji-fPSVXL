{"cells":[{"cell_type":"markdown","metadata":{"collapsed":true,"id":"gjd44w2pa68l"},"source":["# Машинное обучение и анализ данных\n","\n","## Высшая Школа Цифровой Культуры"]},{"cell_type":"markdown","metadata":{"id":"TThlDI8la68p"},"source":["## Библиотека $\\mathsf{pandas}$"]},{"cell_type":"markdown","metadata":{"id":"i9KCAht6a68q"},"source":["Подключение основных возможностей библиотеки $\\mathsf{pandas}$ осуществляется двумя строчками кода: "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p1pHZvK0a68r"},"outputs":[],"source":["from pandas import Series, DataFrame\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZkVe4ebaa68s","outputId":"6564b784-f17e-4e51-ce82-2796b8caad90"},"outputs":[{"name":"stdout","output_type":"stream","text":["0    1\n","1   -3\n","2    2\n","3    7\n","dtype: int64\n"]}],"source":["numbers = Series([1, -3, 2, 7]) #Преобразование списка в серию\n","print(numbers) #Вывод серии"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"daRImpr5a68t","outputId":"22717c45-00cd-45a7-a0df-6d6d180378d3"},"outputs":[{"name":"stdout","output_type":"stream","text":["RangeIndex(start=0, stop=4, step=1)\n","[ 1 -3  2  7]\n"]}],"source":["numbers = Series([1, -3, 2, 7]) #Преобразование списка в серию\n","print(numbers.index) #Вывод индексов в формате индексов pandas\n","print(numbers.values) #Вывод значений серии"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IfOuBjrVa68u","outputId":"a306f13e-b3b5-4622-8379-786c08980e05"},"outputs":[{"name":"stdout","output_type":"stream","text":["d    1\n","b   -3\n","a    2\n","c    7\n","dtype: int64\n"]}],"source":["numbers = Series([1, -3, 2, 7], index=['d', 'b', 'a', 'c']) #Создание серии на основе списка значений и списка индексов\n","print(numbers) #Вывод серии"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FOnG8qLEa68u"},"outputs":[],"source":["numbers = Series([1, -3, 2, 7], index=['a', 'b', 'a', 'c']) #Серия, имеющая пару одинаковых индексов"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dyZJYZupa68v","outputId":"922383e4-8f02-4b5f-de27-35cb4da3e894"},"outputs":[{"data":{"text/plain":["array([1, 2])"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["numbers['a'].values #Вывод значений серии, отвечающих индексу 'a'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mXHeTJYza68w","outputId":"edf9feee-76bc-4afc-d5ca-e16630f5bb59"},"outputs":[{"data":{"text/plain":["array([1, 2, 7])"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["numbers[['a', 'c']].values #Вывод значений серии, отвечающих индексам 'a' и 'c'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fmS3tHCka68w","outputId":"1775664a-85a2-413f-8880-66cf821df1f7"},"outputs":[{"data":{"text/plain":["a     True\n","b    False\n","a     True\n","c     True\n","dtype: bool"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["numbers > 0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Fw7vqeoia68x","outputId":"d09d6135-268a-4d41-a68c-b4620568e9a4"},"outputs":[{"data":{"text/plain":["a    1\n","a    2\n","c    7\n","dtype: int64"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["numbers[numbers > 0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q3RWofIra68x","outputId":"2a4b9dad-d61c-42fd-a6e3-13d388400446"},"outputs":[{"data":{"text/plain":["a    3\n","b   -1\n","a    4\n","c    9\n","dtype: int64"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["numbers + 2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cKXbH9Zva68y"},"outputs":[],"source":["person = {'name': 'Степан', 'gender': 'муж.', 'age': 20} #Создание словаря\n","person_series = Series(person) #Преобразование словаря в серию"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xlVIlylka68y","outputId":"72be4c79-9260-455a-d60f-e5484db5b1d1"},"outputs":[{"data":{"text/plain":["name      Степан\n","gender      муж.\n","age           20\n","dtype: object"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["person_series #Вывод серии данных"]},{"cell_type":"markdown","metadata":{"id":"9fCbqXXRa68y"},"source":["## DataFrame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sz0f39Qpa68z"},"outputs":[],"source":["cars = {'name': ['ford torino', 'peugeot 504', 'fiat 124b'], 'hp': [140, 87, 76]} #Создание словаря из списков\n","cars_frame = DataFrame(cars) #Создание фрейма данных на основе словаря cars"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YJGkeh88a68z","outputId":"aef096af-dc65-404e-8539-1d6a89c6eaac"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ford torino</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>peugeot 504</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>fiat 124b</td>\n","      <td>76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          name   hp\n","0  ford torino  140\n","1  peugeot 504   87\n","2    fiat 124b   76"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame #Вывод фрейма данных"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0xR0TJ8-a680","outputId":"af64d5cf-c7cd-4078-a805-405a0227d0c4"},"outputs":[{"data":{"text/plain":["(3, 2)"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MQSPii7da680","outputId":"35ca2ac2-f70f-49b2-c03c-cc711b2045dd"},"outputs":[{"data":{"text/plain":["0    ford torino\n","1    peugeot 504\n","2      fiat 124b\n","Name: name, dtype: object"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame['name']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Lb2ZJRt6a680","outputId":"ca428b3c-48cf-4af1-af69-9cf2c809546e"},"outputs":[{"data":{"text/plain":["name    ford torino\n","hp              140\n","Name: 0, dtype: object"]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.iloc[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E5vT3vUBa681","outputId":"fc3b1430-69f1-47af-b6b2-814fd2c92a17"},"outputs":[{"data":{"text/plain":["140"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.iloc[0]['hp']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZkK2V3jCa681","outputId":"c2e12c02-dbc0-4ddd-cdaf-afc898f39928"},"outputs":[{"data":{"text/plain":["140"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame['hp'][0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GCRo4rGEa681","outputId":"a345b273-23d3-4103-ac4c-de03f6f44274"},"outputs":[{"data":{"text/plain":["0    140\n","1     87\n","2     76\n","Name: hp, dtype: int64"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame[['hp'][0]]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jz6PgxL4a681","outputId":"98147e02-132d-4c33-b9cd-f2788834645b"},"outputs":[{"data":{"text/plain":["[140, 87, 76]"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["list(cars_frame[['hp'][0]])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YUWTAFHfa682","outputId":"0df1ce35-38df-4621-caf2-2a23621ba4be"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    hp\n","0  140\n","1   87\n","2   76"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame[['hp']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t7JQytkza682","outputId":"e509fc45-c7da-4937-f592-59305bc2ef77"},"outputs":[{"data":{"text/plain":["['hp']"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["list(cars_frame[['hp']])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mhcJidyEa682","outputId":"f7aafc36-d0aa-42d8-a634-30bfb4ad15c6"},"outputs":[{"data":{"text/plain":["0    ford torino\n","1    peugeot 504\n","2      fiat 124b\n","Name: name, dtype: object"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D4sewooVa682"},"outputs":[],"source":["cars = {'name': ['ford torino', 'peugeot 504', 'fiat 124b'],\n","        'hp': [140, 87, 76],\n","        'weight': [3449, 2672, 2065]}\n","cars_frame = DataFrame(cars, columns=['name', 'weight', 'hp'],\n","                             index=['one', 'two', 'three'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cclsdkJga683","outputId":"38443ec2-2486-47f5-b53f-b307c6922c3a"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>one</th>\n","      <td>ford torino</td>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>two</th>\n","      <td>peugeot 504</td>\n","      <td>2672</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>three</th>\n","      <td>fiat 124b</td>\n","      <td>2065</td>\n","      <td>76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              name  weight   hp\n","one    ford torino    3449  140\n","two    peugeot 504    2672   87\n","three    fiat 124b    2065   76"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u_o3x34aa683"},"outputs":[],"source":["cars_frame = DataFrame(cars, columns=['weight', 'hp'],\n","                             index=cars['name'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pd1cMtIoa683","outputId":"0ee05b53-7292-49de-b250-bb0d07b126bc"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>2065</td>\n","      <td>76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","ford torino    3449  140\n","peugeot 504    2672   87\n","fiat 124b      2065   76"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5uJpOvdha683","outputId":"d6bb935c-adc2-42ef-8662-5abb853aaf5a"},"outputs":[{"data":{"text/plain":["weight    3449\n","hp         140\n","Name: ford torino, dtype: int64"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.loc['ford torino']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sa_zxXAxa683","outputId":"b8e4254f-0900-4045-cb68-71bb7a200255"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ford torino</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>weight</th>\n","      <td>3449</td>\n","    </tr>\n","    <tr>\n","      <th>hp</th>\n","      <td>140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        ford torino\n","weight         3449\n","hp              140"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.loc['ford torino'].to_frame()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PU8-rtJBa684","outputId":"e351c0c3-ae73-4973-a49d-55a805b5d596"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","ford torino    3449  140"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.loc['ford torino'].to_frame().T"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KLwfJkTva684","outputId":"23d1a99a-e801-4546-8c3f-9cecfa1cfe43"},"outputs":[{"data":{"text/plain":["87"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.loc['peugeot 504']['hp']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Sdq96DNa684"},"outputs":[],"source":["cars_frame.loc['peugeot 504']['hp'] = 140"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9m7IpPGma684","outputId":"18528bda-4dda-471b-b898-2744206b53e9"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>2065</td>\n","      <td>76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","ford torino    3449  140\n","peugeot 504    2672  140\n","fiat 124b      2065   76"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ijvy6YT4a684"},"outputs":[],"source":["new_cars_frame = cars_frame.drop(['fiat 124b'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-kLG2W7Ia684","outputId":"9e712dd7-a6dc-4b26-bdcf-7551a70c2a44"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","      <td>140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","ford torino    3449  140\n","peugeot 504    2672  140"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["new_cars_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dYNd62jxa685"},"outputs":[],"source":["new_cars_frame = cars_frame.drop(['hp'], axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zij02F20a685","outputId":"eebdb068-73eb-46fd-ae4f-01ecb4c92493"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","    </tr>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>2065</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight\n","ford torino    3449\n","peugeot 504    2672\n","fiat 124b      2065"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["new_cars_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qgNHK33Va685","outputId":"6f9a919a-7f55-447c-b1e6-de0b7a80fba7"},"outputs":[{"name":"stdout","output_type":"stream","text":["0    1\n","1   -3\n","2    2\n","3    7\n","dtype: int64\n","1   -3\n","0    1\n","2    2\n","3    7\n","dtype: int64\n"]}],"source":["numbers = Series([1, -3, 2, 7])\n","sorted_numbers = numbers.sort_values()\n","print(numbers)\n","print(sorted_numbers)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LkUc3kw8a685","outputId":"1a02912b-8516-4e1f-f28d-8c5b0b07d927"},"outputs":[{"name":"stdout","output_type":"stream","text":["0    1\n","1   -3\n","2    2\n","3    7\n","dtype: int64\n","3    7\n","2    2\n","0    1\n","1   -3\n","dtype: int64\n"]}],"source":["numbers = Series([1, -3, 2, 7])\n","sorted_numbers = numbers.sort_values(ascending=False)\n","print(numbers)\n","print(sorted_numbers)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r951cWHxa685","outputId":"908f1da4-6183-4a95-e935-5ba8a87ca1c3"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>2065</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","peugeot 504    2672   76\n","fiat 124b      2065   76\n","ford torino    3449  140"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["cars = {'name': ['ford torino', 'peugeot 504', 'fiat 124b'],\n","        'hp': [140, 76, 76],\n","        'weight': [3449, 2672, 2065]}\n","cars_frame = DataFrame(cars, columns=['weight', 'hp'],\n","                             index=cars['name'])\n","cars_frame.sort_values('hp')                 "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k0aUgzAva686","outputId":"4c09ba90-0141-4b6a-cfd6-d9a592d48718"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>2672</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>2065</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>3449</td>\n","      <td>140</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             weight   hp\n","peugeot 504    2672   76\n","fiat 124b      2065   76\n","ford torino    3449  140"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.sort_values(['hp', 'weight'], ascending=[True, False])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nKGLOoM9a686"},"outputs":[],"source":["cars = {'name': ['ford torino', 'peugeot 504', 'fiat 124b'],\n","        'hp': [140, 87, 76],\n","        'weight': [3449, 2672, 2065]}\n","cars_frame = DataFrame(cars, columns=['weight','hp'],\n","                             index=cars['name'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bgLNWNGsa686","outputId":"828f7d23-e2b0-4957-a61f-44722530f770"},"outputs":[{"data":{"text/plain":["weight    2065\n","hp          76\n","dtype: int64"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.min()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gkOtWMaea686"},"outputs":[],"source":["cars_frame_norm = (cars_frame - cars_frame.min()) / (cars_frame.max() - cars_frame.min())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6VlJXn2Na686","outputId":"f546f6b2-635d-49d1-ad74-d395f1cce5d8"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ford torino</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>peugeot 504</th>\n","      <td>0.438584</td>\n","      <td>0.171875</td>\n","    </tr>\n","    <tr>\n","      <th>fiat 124b</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               weight        hp\n","ford torino  1.000000  1.000000\n","peugeot 504  0.438584  0.171875\n","fiat 124b    0.000000  0.000000"]},"execution_count":49,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame_norm"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rRM6ZbnXa686","outputId":"ad4b8573-1900-4904-a22e-1510eaf14161"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2728.666667</td>\n","      <td>101.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>693.737943</td>\n","      <td>34.219877</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2065.000000</td>\n","      <td>76.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2368.500000</td>\n","      <td>81.500000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2672.000000</td>\n","      <td>87.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3060.500000</td>\n","      <td>113.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3449.000000</td>\n","      <td>140.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            weight          hp\n","count     3.000000    3.000000\n","mean   2728.666667  101.000000\n","std     693.737943   34.219877\n","min    2065.000000   76.000000\n","25%    2368.500000   81.500000\n","50%    2672.000000   87.000000\n","75%    3060.500000  113.500000\n","max    3449.000000  140.000000"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4FkzhKM7a687","outputId":"0c162648-6fad-4853-bb25-cc8e60b16aea"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight</th>\n","      <th>hp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.479528</td>\n","      <td>0.390625</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.501256</td>\n","      <td>0.534686</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.219292</td>\n","      <td>0.085938</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.438584</td>\n","      <td>0.171875</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.719292</td>\n","      <td>0.585938</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         weight        hp\n","count  3.000000  3.000000\n","mean   0.479528  0.390625\n","std    0.501256  0.534686\n","min    0.000000  0.000000\n","25%    0.219292  0.085938\n","50%    0.438584  0.171875\n","75%    0.719292  0.585938\n","max    1.000000  1.000000"]},"execution_count":51,"metadata":{},"output_type":"execute_result"}],"source":["cars_frame_norm.describe()"]},{"cell_type":"markdown","metadata":{"id":"RwgwigZta687"},"source":["### Импорт данных"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ynaiFg52a687"},"outputs":[],"source":["all_cars = pd.read_csv('auto-mpg.csv') # Файл auto-mpg.csv находится в той же директории, что и файл Jupyter блокнота"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pBOsKSXJa687","outputId":"b110489b-9c60-4d65-c8b0-ac3c1e07ab3d"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>car name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130</td>\n","      <td>3504</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165</td>\n","      <td>3693</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150</td>\n","      <td>3436</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150</td>\n","      <td>3433</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140</td>\n","      <td>3449</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n","0  18.0          8         307.0         130    3504          12.0   \n","1  15.0          8         350.0         165    3693          11.5   \n","2  18.0          8         318.0         150    3436          11.0   \n","3  16.0          8         304.0         150    3433          12.0   \n","4  17.0          8         302.0         140    3449          10.5   \n","\n","   model year  origin                   car name  \n","0          70       1  chevrolet chevelle malibu  \n","1          70       1          buick skylark 320  \n","2          70       1         plymouth satellite  \n","3          70       1              amc rebel sst  \n","4          70       1                ford torino  "]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["all_cars.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W_yytKHpa687","outputId":"099d7141-43d5-45d9-8713-99ee24d6624e"},"outputs":[{"data":{"text/html":["<div>\n","<style>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>23.514573</td>\n","      <td>5.454774</td>\n","      <td>193.425879</td>\n","      <td>104.319095</td>\n","      <td>2970.424623</td>\n","      <td>15.568090</td>\n","      <td>76.010050</td>\n","      <td>1.572864</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.815984</td>\n","      <td>1.701004</td>\n","      <td>104.269838</td>\n","      <td>38.409778</td>\n","      <td>846.841774</td>\n","      <td>2.757689</td>\n","      <td>3.697627</td>\n","      <td>0.802055</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>9.000000</td>\n","      <td>3.000000</td>\n","      <td>68.000000</td>\n","      <td>43.000000</td>\n","      <td>1613.000000</td>\n","      <td>8.000000</td>\n","      <td>70.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>17.500000</td>\n","      <td>4.000000</td>\n","      <td>104.250000</td>\n","      <td>75.250000</td>\n","      <td>2223.750000</td>\n","      <td>13.825000</td>\n","      <td>73.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>23.000000</td>\n","      <td>4.000000</td>\n","      <td>148.500000</td>\n","      <td>93.500000</td>\n","      <td>2803.500000</td>\n","      <td>15.500000</td>\n","      <td>76.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>29.000000</td>\n","      <td>8.000000</td>\n","      <td>262.000000</td>\n","      <td>125.000000</td>\n","      <td>3608.000000</td>\n","      <td>17.175000</td>\n","      <td>79.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>46.600000</td>\n","      <td>8.000000</td>\n","      <td>455.000000</td>\n","      <td>230.000000</td>\n","      <td>5140.000000</td>\n","      <td>24.800000</td>\n","      <td>82.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              mpg   cylinders  displacement  horsepower       weight  \\\n","count  398.000000  398.000000    398.000000  398.000000   398.000000   \n","mean    23.514573    5.454774    193.425879  104.319095  2970.424623   \n","std      7.815984    1.701004    104.269838   38.409778   846.841774   \n","min      9.000000    3.000000     68.000000   43.000000  1613.000000   \n","25%     17.500000    4.000000    104.250000   75.250000  2223.750000   \n","50%     23.000000    4.000000    148.500000   93.500000  2803.500000   \n","75%     29.000000    8.000000    262.000000  125.000000  3608.000000   \n","max     46.600000    8.000000    455.000000  230.000000  5140.000000   \n","\n","       acceleration  model year      origin  \n","count    398.000000  398.000000  398.000000  \n","mean      15.568090   76.010050    1.572864  \n","std        2.757689    3.697627    0.802055  \n","min        8.000000   70.000000    1.000000  \n","25%       13.825000   73.000000    1.000000  \n","50%       15.500000   76.000000    1.000000  \n","75%       17.175000   79.000000    2.000000  \n","max       24.800000   82.000000    3.000000  "]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["all_cars.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3wzL9z1ya687"},"outputs":[],"source":["all_cars = pd.read_csv('auto-mpg.csv', \n","                       delimiter=',', \n","                       index_col='car name', \n","                       nrows=5, \n","                       decimal='.', \n","                       usecols=['car name', 'horsepower', 'cylinders', 'weight'])"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"qkXxjVM5a687","executionInfo":{"status":"error","timestamp":1674037689107,"user_tz":-180,"elapsed":12,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"c3d9ac4c-da77-44ba-a16a-3636d692fd9a"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-ddeef1abe25e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mall_cars\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'all_cars' is not defined"]}],"source":["all_cars.head()"]},{"cell_type":"markdown","source":["df.index для добавления индекса в качестве нового столбца\n","\n","reset_index с rename_axis для переименования имени текущего столбца индекса\n","\n","метод set_index для преобразования столбца в индекс\n","\n","MultiIndex установить несколько слоев indexes на колонку"],"metadata":{"id":"xZ6LOWYScEQW"}},{"cell_type":"code","source":["'''df.index для добавления индекса в качестве нового столбца\n","'''\n","\n","import pandas as pd\n","\n","df = pd.DataFrame([\n","    (1,2,None),\n","    (None,4,None),\n","    (5,None,7),\n","    (5,None,None)\n","    ],columns=['a','b','d'])\n","\n","df['index'] = df.index\n","print(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NeDoTnh3a9Lr","executionInfo":{"status":"ok","timestamp":1674037941509,"user_tz":-180,"elapsed":12,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"d4dd59a7-6040-4641-e8a8-4cd9d502cd27"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["     a    b    d  index\n","0  1.0  2.0  NaN      0\n","1  NaN  4.0  NaN      1\n","2  5.0  NaN  7.0      2\n","3  5.0  NaN  NaN      3\n"]}]},{"cell_type":"code","source":["'''Мы можем изменить название нашего index, \n","а затем использовать reset_index в серии:'''\n","\n","# python 3.x\n","import pandas as pd\n","\n","df = pd.DataFrame([\n","    (1,2,None),\n","    (None,4,None),\n","    (5,None,7),\n","    (5,None,None)], \n","    columns=['a','b','d'])\n","df.rename_axis('index').reset_index()\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eM8lhTY4bLq_","executionInfo":{"status":"ok","timestamp":1674038032378,"user_tz":-180,"elapsed":14,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"8928a4c5-2cb7-4729-c1a3-67e2f943ce54"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["     a    b    d\n","0  1.0  2.0  NaN\n","1  NaN  4.0  NaN\n","2  5.0  NaN  7.0\n","3  5.0  NaN  NaN\n"]}]},{"cell_type":"code","source":["'''Мы можем преобразовать любую колонку в index методом set_index:\n","'''\n","# python 3.x\n","import pandas as pd\n","df = pd.DataFrame([\n","    (1,2,None),\n","    (None,4,None),\n","    (5,4,7),\n","    (5,5,None)], \n","    columns=['a','b','d'])\n","df.set_index('b',inplace=True)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyMjtARZbsYf","executionInfo":{"status":"ok","timestamp":1674038061239,"user_tz":-180,"elapsed":582,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"8ef14b79-5efc-45bd-c513-174755c1b970"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["     a    d\n","b          \n","2  1.0  NaN\n","4  NaN  NaN\n","4  5.0  7.0\n","5  5.0  NaN\n"]}]},{"cell_type":"code","source":["'''или если мы хотим удалить индексное имя, \n","как в оригинале, мы можем сделать df.index.name = None:\n","'''\n","# python 3.x\n","import pandas as pd\n","df = pd.DataFrame([\n","    (1,2,None),\n","    (None,4,None),\n","    (5,4,7),\n","    (5,5,None)\n","    ],columns=['a','b','d'])\n","df.set_index('b',inplace=True)\n","df.index.name = None\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t7uRD51ecYuv","executionInfo":{"status":"ok","timestamp":1674038089106,"user_tz":-180,"elapsed":508,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"ade45ffe-8c3d-4ebd-c74b-3bac1bf80d33"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["     a    d\n","2  1.0  NaN\n","4  NaN  NaN\n","4  5.0  7.0\n","5  5.0  NaN\n"]}]},{"cell_type":"code","source":["'''Мы можем использовать функцию MultiIndex.from_product()\n"," для создания MultiIndex следующим образом:\n","'''\n","# python 3.x\n","import pandas as pd\n","import numpy as np\n","index = pd.MultiIndex.from_product([\n","    ['Burger', 'Steak', 'Sandwich'], \n","    ['Half', 'Full']], \n","    names=['Item', 'Type'])\n","df = pd.DataFrame(index=index, \n","                  data=np.random.randint\n","                  (0, 10, (6,4)), \n","                  columns=list('abcd'))\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rPT7Rxpbcg_Q","executionInfo":{"status":"ok","timestamp":1674038161041,"user_tz":-180,"elapsed":4,"user":{"displayName":"VL","userId":"07042257922074321829"}},"outputId":"d250bad2-aa88-4c14-932d-605b830c6e09"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["               a  b  c  d\n","Item     Type            \n","Burger   Half  6  6  4  9\n","         Full  7  1  4  3\n","Steak    Half  8  3  7  9\n","         Full  1  9  5  0\n","Sandwich Half  9  0  8  7\n","         Full  6  0  3  8\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"kTpu1YSKcyit"},"execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}